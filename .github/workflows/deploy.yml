name: Pinepline CI/CD

on:
  push:
    branches:
      - "main"

jobs:
  docker:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Installer Docker
      uses: hoverkraft-tech/compose-action@v2.0.1

    - name: Dormir pendant 10 secondes
      run: sleep 10s
      shell: bash

    - name: Initialiser les conteneurs
      run: |
        for i in {1..5}; do docker-compose up -d && break || sleep 15; done

    - name: Installer les dépendances Composer
      run: docker exec laravel-docker bash -c "composer install"

    - name: Migrer la base de données
      run: docker exec laravel-docker bash -c "php artisan migrate --force"

    - name: Peupler la base de données
      run: docker exec laravel-docker bash -c "php artisan db:seed --force"

    - name: Migrer la base de données de test
      run: docker exec laravel-docker bash -c "php artisan migrate --env=testing --force"  

    - name: Exécuter les tests PHPUnit
      run: docker exec laravel-docker bash -c "php artisan test tests/Feature"

    - name: Deploiement
      # if: github.ref == 'refs/heads/main'
      # env:
      #   SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #   REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #   REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #   REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
      # run: |
      #   mkdir -p ~/.ssh
      #   echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #   chmod 600 ~/.ssh/id_rsa
      #   ssh-keyscan $REMOTE_HOST >> ~/.ssh/known_hosts
      #   rsync -avz --exclude 'node_modules' --exclude '.env' ./ $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH
      #   ssh $REMOTE_USER@$REMOTE_HOST "cd $REMOTE_PATH && composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader && php artisan migrate --force && php artisan cache:clear && php artisan config:cache && php artisan route:cache"
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.SERVER }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
    